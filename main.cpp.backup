#include <WiFiS3.h>
#include <arduinoJson.h>
#include <ArduinoHttpClient.h>

char ssid[] = "Netlab-OIL";
char pass[] = "DesignChallenge";
char* server = "192.168.154.23";
char* sensorDataPath = "/api/sensor/data";

char* authHeader = "Basic QXF1YUJyYWluOkFxdWFCcmFpbi1CRQ==";

int port = 80;

int status = WL_IDLE_STATUS;

WiFiClient client;
HttpClient http = HttpClient(client, server, port);

void printWifiStatus() {
  // print the SSID of the network you're attached to:
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());

  // print your board's IP address:
  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);

  // print the received signal strength:
  long rssi = WiFi.RSSI();
  Serial.print("signal strength (RSSI):");
  Serial.print(rssi);
  Serial.println(" dBm");
}

void connectToWiFi(const char* ssid, const char* password) {
  int retryCount = 0;
  Serial.println("Connecting to WiFi.");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    if (retryCount > 5) {
      Serial.println("Failed to connect to WiFi after 5 attempts.");
      return;
    }

    delay(1000);
    Serial.println("Retrying to connect to WiFi...");
    retryCount++;
  }

  Serial.println("Connected to WiFi!");
}

void setup() {
  Serial.begin(9600);
  while (!Serial) {
    ;
  }
  
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }
  
  String fv = WiFi.firmwareVersion();
  if (fv < WIFI_FIRMWARE_LATEST_VERSION) {
    Serial.println("Please upgrade the firmware");
  }
  
  connectToWiFi(ssid, pass);
  
  printWifiStatus();
 
  Serial.println("\nStarting connection to server...");
  //addSensorData(213, 1, "Test", 7878);
  //Serial.println("Done!");
}

void postSensorData(int watertonId, int sensorId, String type, int waarde) {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Not connected to WiFi");
    connectToWiFi(ssid, pass);
    if (WiFi.status() != WL_CONNECTED) {
      return;
    }
  }
  DynamicJsonDocument doc(1024);
  doc["watertonId"] = 722;
  doc["sensorID"] = 1;
  doc["waarde"] = 6969;
  doc["type"] = "test";

  String jsonData;
  serializeJson(doc, jsonData);

  Serial.println("making POST request");
  
  http.beginRequest();
  http.post(sensorDataPath);
  http.sendHeader("Content-Type", "application/json");
  http.sendHeader("Content-Length", jsonData.length());
  http.sendHeader("Authorization", authHeader);
  http.beginBody();
  http.print(jsonData);
  http.endRequest();

  int httpResponseCode = http.responseStatusCode();

  if (httpResponseCode == 200) {
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
  } else if (httpResponseCode > 0) {
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
    String response = http.responseBody();
    Serial.println(response);
  } else if (httpResponseCode == -4) {
    Serial.println("Connection lost, retrying...");
    connectToWiFi(ssid, pass);
    delay(1000);
  } else {
    Serial.print("Error on sending POST: ");
    Serial.println(httpResponseCode);
  }
}

void loop() {  
  postSensorData(722, 1, "Test", 6900);

  Serial.println("Wait five seconds");
  delay(5000);
}